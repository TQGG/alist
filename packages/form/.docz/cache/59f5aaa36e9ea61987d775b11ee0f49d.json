{"remainingRequest":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js??ref--6-1!/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_@mdx-js_loader@1.0.20@@mdx-js/loader/index.js??ref--6-2!/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_source-map-loader@0.2.4@source-map-loader/index.js!/Users/guishu/Desktop/workspace/nopage/packages/form/src/mdx/getStart/usage.mdx","dependencies":[{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/src/mdx/getStart/usage.mdx","mtime":1560179356156},{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_@mdx-js_loader@1.0.20@@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_source-map-loader@0.2.4@source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/guishu/Desktop/workspace/nopage/packages/form/src/mdx/getStart/usage.mdx"],"names":["React","mdx","Playground","react","Select","Input","Radio","Button","AntdSelect","Form","FormItem","FormCore","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","core","enableReceiveProps","statusHandler","e","setGlobalStatus","target","value","opstHandler","setItemProps","options","opts","print","log","getValues","getProps","getStatus","opts1","label","opts2","values","ctx","username","choice","getItemProps","find","item","lineHeight","isMDXComponent"],"mappings":";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AACF,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,oBAA7C;AACA,SAASH,MAAM,IAAII,UAAnB,QAAqC,MAArC;AACA,OAAOC,IAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAyC,QAAzC;AACA,OAAO,oBAAP;AACA,OAAO,uBAAP;AACA,OAAO,+BAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAe;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf,yJAAgG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhG,gEACG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,WALK,EAOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yJAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAC,wCAAR;AAAiD,IAAA,MAAM,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,YAGI;AAAG,IAAA,IAAI,EAAC,oBAAR;AAA6B,IAAA,MAAM,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAFA,CAPK,EAeL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAL,CAfK,EAmBL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnBK,EAsBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAa;AAAQ,IAAA,UAAU,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAb,kDAAuE;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvE,gCAAiI;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjI,QAAyL;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzL,CAtBK,EAuBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mRAAL,CAvBK,EAgCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,UAAU,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGADF,CAhCK,EAmCL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAnCK,EAsCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAtCK,EAuCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAAkC;AAAQ,IAAA,UAAU,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlC,wFAAqG;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArG,8BAAkK;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAlK,2CADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAAuC;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvC,8BAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAHF,EAIE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4NAJF,CAvCK,EA6CL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,owEAAL,CA7CK,EAsGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAtGK,EAuGL,IAAC,UAAD;AAAY,IAAA,UAAU,EAAE,CAAxB;AAA2B,IAAA,MAAM,EAAE,6oEAAnC;AAAkrE,IAAA,OAAO,EAAE;AACzrEN,MAAAA,KAAK,EAAE,OAAO,KAAKA,KAAZ,GAAoBA,KAD8pE;AAEzrEb,MAAAA,UAAU,EAAVA,UAFyrE;AAGzrEC,MAAAA,KAAK,EAALA,KAHyrE;AAIzrEC,MAAAA,MAAM,EAANA,MAJyrE;AAKzrEC,MAAAA,KAAK,EAALA,KALyrE;AAMzrEC,MAAAA,KAAK,EAALA,KANyrE;AAOzrEC,MAAAA,MAAM,EAANA,MAPyrE;AAQzrEC,MAAAA,UAAU,EAAVA,UARyrE;AASzrEC,MAAAA,IAAI,EAAJA,IATyrE;AAUzrEC,MAAAA,QAAQ,EAARA,QAVyrE;AAWzrEC,MAAAA,QAAQ,EAARA;AAXyrE,KAA3rE;AAYG,IAAA,aAAa,+9FAZhB;AAYi/F,IAAA,OAAO,EAAC,YAZz/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaC,YAAM;AACH,QAAMW,IAAI,GAAG,IAAIX,QAAJ,CAAa;AACxBY,MAAAA,kBAAkB,EAAE;AADI,KAAb,CAAb;;AAIA,QAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC;AAAA,aAAIH,IAAI,CAACI,eAAL,CAAqBD,CAAC,CAACE,MAAF,CAASC,KAA9B,CAAJ;AAAA,KAAvB,CALG,CAK8D;;;AAGjE,QAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAJ,CAAC,EAAI;AACvB;AACAH,MAAAA,IAAI,CAACQ,YAAL,CAAkB,QAAlB,EAA4B;AAC1BC,QAAAA,OAAO,EAAEC,IAAI,CAACP,CAAC,CAACE,MAAF,CAASC,KAAV;AADa,OAA5B;AAGD,KALD;;AAOA,QAAMK,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBjB,MAAAA,OAAO,CAACkB,GAAR,CAAY,SAAZ,EAAuBZ,IAAI,CAACa,SAAL,EAAvB;AACAnB,MAAAA,OAAO,CAACkB,GAAR,CAAY,QAAZ,EAAsBZ,IAAI,CAACc,QAAL,EAAtB;AACApB,MAAAA,OAAO,CAACkB,GAAR,CAAY,SAAZ,EAAuBZ,IAAI,CAACe,SAAL,EAAvB;AACD,KAJD;;AAMA,QAAML,IAAI,GAAG;AACXM,MAAAA,KAAK,EAAE,CAAC;AACNC,QAAAA,KAAK,EAAE,KADD;AAENX,QAAAA,KAAK,EAAE;AAFD,OAAD,CADI;AAKXY,MAAAA,KAAK,EAAE,CAAC;AACND,QAAAA,KAAK,EAAE,aADD;AAENX,QAAAA,KAAK,EAAE;AAFD,OAAD;AALI,KAAb;AAUA,WAAO,IAAC,IAAD;AAAM,MAAA,IAAI,EAAEN,IAAZ;AAAkB,MAAA,OAAO,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,IAAC,QAAD;AAAU,MAAA,KAAK,EAAC,iBAAhB;AAAkC,MAAA,MAAM,EAAE,kBAAM;AAChD,eAAO,IAAC,KAAD,CAAO,KAAP;AAAa,UAAA,YAAY,EAAC,MAA1B;AAAiC,UAAA,QAAQ,EAAEE,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,IAAC,KAAD,CAAO,MAAP;AAAc,UAAA,KAAK,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EAEC,IAAC,KAAD,CAAO,MAAP;AAAc,UAAA,KAAK,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFD,EAGC,IAAC,KAAD,CAAO,MAAP;AAAc,UAAA,KAAK,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHD,CAAP;AAKD,OANC;AAMC,MAAA,OAAO,EAAC,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,EASH,IAAC,QAAD;AAAU,MAAA,KAAK,EAAC,cAAhB;AAA+B,MAAA,MAAM,EAAE,kBAAM;AAC7C,eAAO,IAAC,KAAD,CAAO,KAAP;AAAa,UAAA,YAAY,EAAC,OAA1B;AAAkC,UAAA,QAAQ,EAAEK,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,IAAC,KAAD,CAAO,MAAP;AAAc,UAAA,KAAK,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADD,EAEC,IAAC,KAAD,CAAO,MAAP;AAAc,UAAA,KAAK,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFD,CAAP;AAID,OALC;AAKC,MAAA,OAAO,EAAC,UALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATG,EAgBH,IAAC,QAAD;AAAU,MAAA,KAAK,EAAC,eAAhB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAA8C,MAAA,YAAY,EAAC,MAA3D;AAAkE,MAAA,OAAO,EAAC,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,IAAC,MAAD;AAAQ,MAAA,OAAO,EAAEG,IAAI,CAACM,KAAtB;AAA6B,MAAA,OAAO,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAhBG,EAoBH,IAAC,QAAD;AAAU,MAAA,KAAK,EAAC,UAAhB;AAA2B,MAAA,IAAI,EAAC,UAAhC;AAA2C,MAAA,YAAY,EAAC,OAAxD;AAAgE,MAAA,OAAO,EAAC,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,IAAC,KAAD;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CApBG,EAwBH,IAAC,QAAD;AAAU,MAAA,WAAW,MAArB;AAAsB,MAAA,KAAK,EAAC,OAA5B;AAAoC,MAAA,MAAM,EAAE,gBAACG,MAAD,EAASC,GAAT,EAAiB;AAAA,YAE3DC,QAF2D,GAIzDF,MAJyD,CAE3DE,QAF2D;AAAA,YAG3DC,MAH2D,GAIzDH,MAJyD,CAG3DG,MAH2D;;AAAA,gCAOzDF,GAAG,CAACG,YAAJ,CAAiB,QAAjB,CAPyD;AAAA,YAM3Dd,OAN2D,qBAM3DA,OAN2D;;AAAA,4BAUzDA,OAAO,CAACe,IAAR,CAAa,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACnB,KAAL,KAAegB,MAAnB;AAAA,SAAjB,CAVyD;AAAA,YAS3DL,KAT2D,iBAS3DA,KAT2D;;AAW7D,eAAO;AAAK,UAAA,KAAK,EAAE;AACjBS,YAAAA,UAAU,EAAE;AADK,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGEL,QAHF,0BAGiBJ,KAHjB,EAIC,IAAC,MAAD;AAAQ,UAAA,OAAO,EAAEN,KAAjB;AAAwB,UAAA,OAAO,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJD,CAAP;AAMD,OAjBC;AAiBC,MAAA,OAAO,EAAC,UAjBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBG,CAAP;AA2CD,GAvFH,CAvGK,CAAP;AAiMD;;;;;;;;;;;;;AAEDb,UAAU,CAAC6B,cAAX,GAA4B,IAA5B;;;;;;;;;;0BAhNMrC,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz'\nimport react from 'react';\nimport { Select, Input, Radio, Button } from 'nowrapper/lib/antd';\nimport { Select as AntdSelect } from 'antd';\nimport Form, { FormItem, FormCore } from 'noform';\nimport 'antd/dist/antd.css';\nimport 'noform/dist/index.css';\nimport 'nowrapper/dist/antd/index.css';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"安装\"\n    }}>{`安装`}</h1>\n    <p>{`首先我们会安装 `}<inlineCode parentName=\"p\">{`noform`}</inlineCode>{`, 但是光有表单框架没有实质的组件也是不行的，这里以 `}<inlineCode parentName=\"p\">{`antd`}</inlineCode>{` 为例演示。\n同时安装 `}<inlineCode parentName=\"p\">{`nowrapper`}</inlineCode>{`。`}</p>\n    <p>\n    它的作用主要是提供组件标准，目前支持两大组件阵营 \n    <span>\n        <a href=\"https://github.com/alibaba-fusion/next\" target=\"_blank\"> fusion-next </a>\n        和\n        <a href=\"https://ant.design\" target=\"_blank\"> antd </a>\n    </span>\n    </p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ npm install --save noform antd nowrapper\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"引入\"\n    }}>{`引入`}</h1>\n    <p>{`这里会引入 `}<strong parentName=\"p\">{`nowrapper`}</strong>{` 已经标准化过的 `}<inlineCode parentName=\"p\">{`antd`}</inlineCode>{` 表单组件 `}<inlineCode parentName=\"p\">{`select`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`input`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import Form, { FormItem, FormCore } from 'noform';\nimport { Select, Input } from 'nowrapper/lib/antd';\nimport 'antd/dist/antd.css';\nimport 'noform/lib/index.scss';\nimport 'nowrapper/dist/antd/index.css'; // antd\nimport 'nowrapper/lib/next/index.scss'; // next\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`lib目录下是scss文件，dist目录下是css文件`}</p>\n    </blockquote>\n    <h1 {...{\n      \"id\": \"初使用\"\n    }}>{`初使用`}</h1>\n    <p>{`以下代码会演示这几个功能：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`切换全局状态，发现 `}<strong parentName=\"li\">{`nowrapper`}</strong>{` 处理过的组件有预览功能 ( 并且`}<inlineCode parentName=\"li\">{`FormItem`}</inlineCode>{`已经做了`}<inlineCode parentName=\"li\">{`value/onChange`}</inlineCode>{`的绑定动作了 )`}</li>\n      <li parentName=\"ol\">{`通过设置属性API，动态切换 `}<inlineCode parentName=\"li\">{`select`}</inlineCode>{` 的数据源`}</li>\n      <li parentName=\"ol\">{`combo功能，动态渲染多字段合成值`}</li>\n      <li parentName=\"ol\">{`获取表单值功能, 获取表单所有组件属性，获取表单所有组件状态，在控制台查看`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const App = () => {\n    const core = new FormCore({\n        enableReceiveProps: true,\n    });\n    const statusHandler = (e) => core.setGlobalStatus(e.target.value); // 切换全局状态\n    const opstHandler = (e) => { // 切换select数据源\n        core.setItemProps('choice', { options: opts[e.target.value]})\n    }\n\n    const print = () => { // 打印values, props, status\n        console.log('values:', core.getValues())\n        console.log('props:', core.getProps())\n        console.log('status:', core.getStatus())\n    }\n\n    const opts = {\n        opts1: [{ label: '选项1', value: 'opt1' }],\n        opts2: [{ label: 'selection A', value: 'opt1' }]\n    };\n    return <Form core={core}>\n        <FormItem label=\"setGlobalStatus\" render={() => {\n            return <Radio.Group defaultValue=\"edit\" onChange={statusHandler}>\n                <Radio.Button value=\"edit\">编辑</Radio.Button>\n                <Radio.Button value=\"preview\">预览</Radio.Button>\n                <Radio.Button value=\"disabled\">禁用</Radio.Button>\n            </Radio.Group>\n        }} />\n\n        <FormItem label=\"setItemProps\" render={() => {\n            return <Radio.Group defaultValue=\"opts1\" onChange={opstHandler}>\n                <Radio.Button value=\"opts1\">数据源1</Radio.Button>\n                <Radio.Button value=\"opts2\">数据源2</Radio.Button>\n            </Radio.Group>\n        }} />\n\n        <FormItem label=\"WrapperSelect\" name=\"choice\" defaultValue=\"opt1\">\n            <Select options={opts.opts1}/>\n        </FormItem>\n\n        <FormItem label=\"UserName\" name=\"username\" defaultValue=\"Bobby\">\n            <Input />\n        </FormItem>\n\n        <FormItem listenProps label=\"Combo\" render={(values, ctx) => {\n            const { username, choice } = values;\n            const { options } = ctx.getItemProps('choice');\n            const { label } = options.find(item => item.value === choice);\n            return <div style={{ lineHeight: '28px' }}>\n                <div>{username} 选择了 {label}</div>\n                <Button onClick={print}>打印</Button>\n            </div>\n        }} />\n    </Form>\n}\n`}</code></pre>\n    <p>{`效果如下：`}</p>\n    <Playground __position={1} __code={'() => {\\n  const core = new FormCore({\\n    enableReceiveProps: true,\\n  })\\n  const statusHandler = e => core.setGlobalStatus(e.target.value) // 切换全局状态\\n  const opstHandler = e => {\\n    // 切换select数据源\\n    core.setItemProps(\\'choice\\', { options: opts[e.target.value] })\\n  }\\n  const print = () => {\\n    console.log(\\'values:\\', core.getValues())\\n    console.log(\\'props:\\', core.getProps())\\n    console.log(\\'status:\\', core.getStatus())\\n  }\\n\\n  const opts = {\\n    opts1: [{ label: \\'选项1\\', value: \\'opt1\\' }],\\n    opts2: [{ label: \\'selection A\\', value: \\'opt1\\' }],\\n  }\\n  return (\\n    <Form core={core}>\\n      <FormItem\\n        label=\\\"setGlobalStatus\\\"\\n        render={() => {\\n          return (\\n            <Radio.Group defaultValue=\\\"edit\\\" onChange={statusHandler}>\\n              <Radio.Button value=\\\"edit\\\">编辑</Radio.Button>\\n              <Radio.Button value=\\\"preview\\\">预览</Radio.Button>\\n              <Radio.Button value=\\\"disabled\\\">禁用</Radio.Button>\\n            </Radio.Group>\\n          )\\n        }}\\n      />\\n\\n      <FormItem\\n        label=\\\"setItemProps\\\"\\n        render={() => {\\n          return (\\n            <Radio.Group defaultValue=\\\"opts1\\\" onChange={opstHandler}>\\n              <Radio.Button value=\\\"opts1\\\">数据源1</Radio.Button>\\n              <Radio.Button value=\\\"opts2\\\">数据源2</Radio.Button>\\n            </Radio.Group>\\n          )\\n        }}\\n      />\\n\\n      <FormItem label=\\\"WrapperSelect\\\" name=\\\"choice\\\" defaultValue=\\\"opt1\\\">\\n        <Select options={opts.opts1} />\\n      </FormItem>\\n\\n      <FormItem label=\\\"UserName\\\" name=\\\"username\\\" defaultValue=\\\"Bobby\\\">\\n        <Input />\\n      </FormItem>\\n\\n      <FormItem\\n        listenProps\\n        label=\\\"Combo\\\"\\n        render={(values, ctx) => {\\n          const { username, choice } = values\\n          const { options } = ctx.getItemProps(\\'choice\\')\\n          const { label } = options.find(item => item.value === choice)\\n          return (\\n            <div style={{ lineHeight: \\'28px\\' }}>\\n              {username} 选择了 {label}\\n              <Button onClick={print}>打印</Button>\\n            </div>\\n          )\\n        }}\\n      />\\n    </Form>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      react,\n      Select,\n      Input,\n      Radio,\n      Button,\n      AntdSelect,\n      Form,\n      FormItem,\n      FormCore\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtKZTUldDZXlM1cIg9goOcectgIJYGlQGZwiWEUOwGJZr3CCJzDQo0SNQUZMjmDJJCgCAPEkdwCHQcj8Mo9hqNgIj_HYABBGh0EU2jUOIuUpJklVUDw9V2AAMSFIglig8yBCIJsYEssyLMcLodL4uUBLACzZJM9p9J3FFJI0j44DgHz7XaTyLICghJFUbAQrCwzjIigSRiE2EYqC6S4vDXAziS20TMDIj3NIxUwVQXQUWOU4sOcAhEixdhuEo9YogEZ5UCudoAAZ2CTGYsHaPdqxmDsWBnHqABYhvYAA2IaRvWLyaFM71oESHr-GcQ4EQdTAYKEfgliIahKDgcaEWW6tVoIZwICwy52AARmm0b5Eq6qplUuYWvYCMoPIGwoHQMNUI5FqxAB6MZHYFEmpgbhgGwhrEbgeQtxrYBgegMHggAMgJ8ZEnmShmlx0Hwe4Gm5TAZDJQGVB2nYAB-DY8bDCNIauSn8dQT7qykGQqzfMwYRMzAwDCKApm5qGYaF37l2rCxgHl7hoeAFcLG-wtXNa50xhsogXJgQGdZrOhXA8WAxQRNgYGggd7nGNEYFGmsa3kN8vd16gapRaI8gACUqWAjla7pNf1v84FHABxKBKA8eIGuDuAIz_AhXE60ccFYeIGUhx52EAcCVACNjQALRUAAR1ADanQBAA0tvXKDuAgw4wCP_ujrXLYsUvK_jpSCEAB1NADtjQAEuz72OcHjgh7KIZ3W8z9pgcoWIYBG-TW-7VBXZ3uAAG1s9z08C6LmAAF0IctwW_cLPepn7NAplajXe9Vv3qsoWAcGTlJHyFygAye4W8qBdBPKOAAahfTOHJfb3wfnAH-f5_6Pn7MvRAYChR_lPEvO43MEH32_r_NB7Qg4EDyFgpY4DcGjnTpQuBRDvaVWIQHA4MwCB2FatrT-XsD4vSuIfKCcFAhQB6oASATACeGS9LeQCGQ9R3rI1Cl9PaIIPgAJiESIm284epD1okzNSciL6KM4co-Qqjb6Wy6JQgQ5gox8JrIwE2sdka0MxtPBMJsF5eJrKI-cfAQBzyTinNOOdGH8D8RYScGRkbvzak4xBE5Rx9AcdEv2jBWIsEoDgBOSEZjHBgNLUIssYHAKRvwbILx-B7FQPYPwM4kbAAoaHcOGRPFJOSc47JAwcCcRuMyeRlSQDVNECAMQgA0f0AInxUhem5IGdxLG3TEFZLYgsriQyL5BP7DAVgEAYAjHEIAEIzAATkXM9Z_TNmoGWSszJ8yrmDPMMMoJLAKi22yOIQAgZ6AApXC5OTHlLIyV7f5fT8ltBVncmszDknyDvt0zcrDukuIsr4rpXsAlQCCXPBe-C4BRPRTWWJAh4mQxjrwqFMTUn2MVpSnplzwWhEKVLGWBBykMiCQI2p1AGnuDSMjZe7d2kCE6XSkFDzFlbIqZyzhcAXriHHhPF6oKNlPNuXStZALJXPO2fwTRCrJ4aJVYC6g6q7nGsZZCylMLEFwr8Yi_0hKUW2QXuwTFQSADqGUMhaUlLU1A3oRlrw3rUllpS2W6pAEo8QGTGC-o4bvOAArZU4AEWhB1KypA-NoEQKsfjnV2RzW63RWL-AAFV44CAAHKBv9YGoJeQMgBqPKG4prL2UjOvCnDwiQY2EoTAxJiUwM3IskNmhyeanXjqIBksSKI6B4tnSWoJaYvAEqhcS-Jwy4A0IIFgMlH86V6ygo2-xgaaHDA3jpVq27gVIMgnsThTM7BoVapKXAp5cUu0fMG66NrknHuLWI69j7E04EgBgCMLwHIK2g0Qc-FSWq01_TAf9iDbFpNpWKmMHAEawGRiItAMAQ4wAgCkQgPUNEAA4lqoVFWKtWp7m0wDQhIwAl0aADC5SimL4UMcYNqup9gxI7GRs_GgmNADKRoAB2UpDarNZmncsg71oa9nawlI775Zosma5hantzK1FmYL8IArrbFcGkf8yDUCAV0CBAwYEKXsH4Mx_gVx-A_GLNUDI5ofxkkZCANR_BWAZHyNQVzTmQC9RwFF3qJ11j8HKOQfoT6wtIAi6peGeFYDQiwN6PzRSySUESLmPIBQUlmnNB5v4pY4vVn4FENA4X-DxQ0PigL8WQCYHmOGKqBy2tXEcxYBLdUmsgAAHovRwBo6LtWvb8EIuMtz42XrzRwFRnA81Zs1n4PpUbY2kw4BeutjRW2hsgDSt6gQe3JvTZekmU7EWoq2WuzgA7J32uf3m5qS0kRrurfW5tkA6xBbyGM557wHxqCQBSJZ6gNngL6AYNrEAOayRZFc-500tBzQLfNLMGY_BQdwvkEAA`} mdxType=\"Playground\">\n    {() => {\n        const core = new FormCore({\n          enableReceiveProps: true\n        });\n\n        const statusHandler = e => core.setGlobalStatus(e.target.value); // 切换全局状态\n\n\n        const opstHandler = e => {\n          // 切换select数据源\n          core.setItemProps('choice', {\n            options: opts[e.target.value]\n          });\n        };\n\n        const print = () => {\n          console.log('values:', core.getValues());\n          console.log('props:', core.getProps());\n          console.log('status:', core.getStatus());\n        };\n\n        const opts = {\n          opts1: [{\n            label: '选项1',\n            value: 'opt1'\n          }],\n          opts2: [{\n            label: 'selection A',\n            value: 'opt1'\n          }]\n        };\n        return <Form core={core} mdxType=\"Form\">\n            <FormItem label=\"setGlobalStatus\" render={() => {\n            return <Radio.Group defaultValue=\"edit\" onChange={statusHandler}>\n                    <Radio.Button value=\"edit\">编辑</Radio.Button>\n                    <Radio.Button value=\"preview\">预览</Radio.Button>\n                    <Radio.Button value=\"disabled\">禁用</Radio.Button>\n                </Radio.Group>;\n          }} mdxType=\"FormItem\" />\n\n            <FormItem label=\"setItemProps\" render={() => {\n            return <Radio.Group defaultValue=\"opts1\" onChange={opstHandler}>\n                    <Radio.Button value=\"opts1\">数据源1</Radio.Button>\n                    <Radio.Button value=\"opts2\">数据源2</Radio.Button>\n                </Radio.Group>;\n          }} mdxType=\"FormItem\" />\n\n            <FormItem label=\"WrapperSelect\" name=\"choice\" defaultValue=\"opt1\" mdxType=\"FormItem\">\n                <Select options={opts.opts1} mdxType=\"Select\" />\n            </FormItem>\n\n            <FormItem label=\"UserName\" name=\"username\" defaultValue=\"Bobby\" mdxType=\"FormItem\">\n                <Input mdxType=\"Input\" />\n            </FormItem>\n\n            <FormItem listenProps label=\"Combo\" render={(values, ctx) => {\n            const {\n              username,\n              choice\n            } = values;\n            const {\n              options\n            } = ctx.getItemProps('choice');\n            const {\n              label\n            } = options.find(item => item.value === choice);\n            return <div style={{\n              lineHeight: '28px'\n            }}>\n                    {username} 选择了 {label}\n                    <Button onClick={print} mdxType=\"Button\">打印</Button>\n                </div>;\n          }} mdxType=\"FormItem\" />\n        </Form>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}