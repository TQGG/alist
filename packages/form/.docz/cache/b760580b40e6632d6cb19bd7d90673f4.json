{"remainingRequest":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js??ref--6-1!/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_@mdx-js_loader@1.0.20@@mdx-js/loader/index.js??ref--6-2!/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_source-map-loader@0.2.4@source-map-loader/index.js!/Users/guishu/Desktop/workspace/nopage/packages/form/src/mdx/getStart/fusion.mdx","dependencies":[{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/src/mdx/getStart/fusion.mdx","mtime":1560179356155},{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_@mdx-js_loader@1.0.20@@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/guishu/Desktop/workspace/nopage/packages/form/node_modules/_source-map-loader@0.2.4@source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/guishu/Desktop/workspace/nopage/packages/form/src/mdx/getStart/fusion.mdx"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"fusion-next最佳实践\"\n    }}>{`Fusion-Next最佳实践`}</h1>\n    <p>\n    本文会使用create-react-app作为脚手架，然后在创建的工程里使用 `NoForm` 和 `next` 组件 的结合，快速的编写表单应用。\n    当然，你也可以直接clone <a href=\"https://github.com/quirkyshop/noform-start-app\" target=\"_blank\"> noform-start-app </a>\n    在这里面我们集成了各种实用的例子。\n    </p>\n    <h2 {...{\n      \"id\": \"安装和初始化\"\n    }}>{`安装和初始化`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ npm install -g create-react-app\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"新建项目\"\n    }}>{`新建项目`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npx create-react-app noform-app\ncd noform-app\nnpm start\n`}</code></pre>\n    <p>{`当然你也可以使用`}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`，这里不赘述了。看到 Welcome to React 就表示已经创建成功了，接下来我们接入next组件和NoForm。`}</p>\n    <h2 {...{\n      \"id\": \"引入antd和noform\"\n    }}>{`引入antd和NoForm`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ npm install --save @alifd/next noform nowrapper\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"配置优化\"\n    }}>{`配置优化`}</h2>\n    <p><inlineCode parentName=\"p\">{`create-react-app`}</inlineCode>{`最酷的一点是，人们不需要任何配置就可以把React应用run起来，但是修改配置的时候又会很痛苦。\n`}<inlineCode parentName=\"p\">{`react-app-rewire`}</inlineCode>{`d 就是解决这个痛点的社区方案。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ npm install --save-dev react-app-rewired\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"加载scss样式\"\n    }}>{`加载scss样式`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ npm install --save react-app-rewire-sass\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"编写配置\"\n    }}>{`编写配置`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const rewireSass = require('react-app-rewire-sass');\n\n/* config-overrides.js */\nmodule.exports = function override(config, env) {\n  config = rewireSass(config, env);\n  return config;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"脚本更新\"\n    }}>{`脚本更新`}</h2>\n    <p>{`配置撸完了，现在着手编写代码吧。`}</p>\n    <ol>\n      <li parentName=\"ol\">{`首先编写样式文件`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-less\"\n      }}>{`// src/App.scss\n@import '~noform/index.scss';\n@import '~nowrapper/lib/next/index.scss';\n@import '~nowrapper/lib/next/repeater.scss';\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`编写主要代码`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// src/App.js\nimport React, { Component } from 'react';\nimport Form, { FormItem, FormCore, If } from 'noform';\nimport { Input, Select } from 'nowrapper/lib/next';\nimport { Button } from 'antd';\nimport './App.scss';\n\nconst dataSource = [\n    { label: 'optA', value: 'optA'},\n    { label: 'optB', value: 'optB'}\n];\n\nclass App extends Component {\n    constructor(props, context) {\n        super(props, context);\n        window.core = this.core = new FormCore();\n    }\n\n    setStatus = (status) => {\n        this.core.setGlobalStatus(status);\n    }\n\n    render() {\n        return (\n            <Form core={this.core} layout={{ label: 8, control: 16 }}>\n                <FormItem label=\"input\" name=\"input\"><Input /></FormItem>\n                <FormItem label=\"select\" name=\"select\"><Select dataSource={dataSource} /></FormItem>\n                <If when={(values, { globalStatus }) => {\n                    return !!values.select;\n                }}>\n                <FormItem label=\"bingo!\"><span>🎉</span></FormItem>\n                </If>\n                <FormItem label=\"Global status\">\n                    <div >\n                        <Button style={{ marginRight: 12 }} onClick={this.core.reset.bind(this.core)}>Clear</Button>\n                        <Button style={{ marginRight: 12 }} onClick={this.setStatus.bind(this, 'edit')}>Edit</Button>\n                        <Button style={{ marginRight: 12 }} onClick={this.setStatus.bind(this, 'preview')}>Preview</Button>\n                        <Button style={{ marginRight: 12 }} onClick={this.setStatus.bind(this, 'disabled')}>Disabled</Button>\n                    </div>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nexport default App;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"重新启动\"\n    }}>{`重新启动`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ npm start\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wow\"\n    }}>{`Wow`}</h2>\n    <p>{`当你能够顺利切换状态的时候，恭喜你！已经完成了最佳实践的教程，现在可以继续查看其它文档。`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}